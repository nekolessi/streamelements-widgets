name: Release

on:
  push:
    branches:
      - main
    tags:
      - "v*"
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  changesets:
    name: Version & Publish (Changesets)
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org'

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Create Release PR or Publish
        uses: changesets/action@v1
        with:
          version: pnpm dlx changeset version
          publish: pnpm -r publish --access public
          title: 'chore: release'
          commit: 'chore: version packages'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  release:
    name: Create GitHub Release (tagged)
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Prepare release artifacts
        run: |
          mkdir -p release-zips
          # 1) Use prebuilt zips if your build produces them into package dists
          find packages -type f -name "*.zip" -exec cp {} release-zips/ \; || true
          # 2) Otherwise zip each package's dist
          for d in packages/*/dist; do
            if [ -d "$d" ]; then
              pkg="$(basename "$(dirname "$d")")"
              (cd "$d" && zip -r "$GITHUB_WORKSPACE/release-zips/${pkg}.zip" .)
            fi
          done
          # 3) Fallback: zip the whole repo (excluding heavy dirs) if nothing found
          if [ "$(ls -A release-zips)" = "" ]; then
            zip -r release-zips/repository.zip . -x ".git/*" "node_modules/*" "packages/*/node_modules/*"
          fi
          ls -la release-zips

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: release-zips/*.zip
          generate_release_notes: true
          fail_on_unmatched_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
